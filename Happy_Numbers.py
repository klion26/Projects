###########################################
# Author: klion26
# Date: 2014/11/08
# Problem: Happy_Numbers
###########################################

# test n is a happynumber or not
def happyNum(n):
    # l is the list of numbers generated by n
    l = [n]
    while True:
        # get the last number
        t = l[-1]
        # calculate the square sum of all digits
        s = 0
        while t>0:
            s += (t%10)**2
            t /= 10
        # if s has been generated before
        if s in l:
            break
        elif s==1:#got it
            l.append(1)
            break
        else:
            l.append(s)
    if l[-1] == 1:# test the answer
        return True
    else:
        return False

def getDigits(n):
    digits = []
    while n:
        digits.append(n%10)
        n /= 10
    digits.reverse()
    return digits
def isHappy(n):
    pre = []
    while True:
        digits = getDigits(n)
        sum_of_squared_digits = sum(list(map(lambda x: x**2, digits)))
        if sum_of_squared_digits == 1:
            return True
        elif sum_of_squared_digits in pre:
            return False
        else:
            n = sum_of_squared_digits
            pre.append(n)
            
if __name__ == "__main__":
    total = 0
    for i in xrange(10**8):
        if happyNum(i):
            print i
            total += 1
            if total == 8:
                break
